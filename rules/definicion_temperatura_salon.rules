// Imports
//import org.openhab.core.library.types
//import org.openhab.core.persistence
//import org.openhab.model.script.actions
//import org.joda.time


// Constants used to generate this rule
var Number TemperaturaMedia = 19
var Number TemperaturaAlta = 22
var Number TemperaturaBaja = 17
var Number TemperaturaLeida = 0
var boolean CambioTemperaturaporRegla=false


rule "Definicion Temperatura Salon"
when
    Item SensorTermostatoTemperatura changed
then
  logInfo("Definicion Temperatura Salon rule", "Entró en la regla")
  if ((TR_ModoManual.state == OFF))
  {
    logInfo("Definicion Temperatura Salon rule", "Entró en el if state OFF")
    if ((now.isAfter(now.withTimeAtStartOfDay.plusHours(16))) && 
        now.isBefore(now.withTimeAtStartOfDay.plusHours(22)))
        logInfo("Definición Temperatura Salon rule", "TemperaturaLeida TemperaturaAlta " + TemperaturaLeida + " " + TemperaturaAlta)
        if (TemperaturaLeida != TemperaturaAlta && TR_TermostatoApagado.state !=ON) {
            logInfo("Definicion Temperatura Salon rule", "Entró en el if TemperaturaAlta")
            CambioTemperaturaporRegla=true 
            thermostat_setpoint_heating.sendCommand(TemperaturaAlta)
            TemperaturaLeida = (thermostat_setpoint_heating.state as DecimalType).intValue
            TR_TemperaturaTermostato.sendCommand(TemperaturaLeida)
        
        }
  
    else {
        logInfo("Definición Temperatura Salon rule", "TemperaturaLeida TemperaturaMedia " + TemperaturaLeida + " " + TemperaturaMedia)
        if (TemperaturaLeida != TemperaturaMedia && TR_TermostatoEncendido.state !=ON) {
            logInfo("Definicion Temperatura Salon rule", "Entró en el if TemperaturaMedia")
            CambioTemperaturaporRegla=true 
            thermostat_setpoint_heating.sendCommand(TemperaturaMedia)
            TemperaturaLeida = (thermostat_setpoint_heating.state as DecimalType).intValue
            TR_TemperaturaTermostato.sendCommand(TemperaturaLeida)
        }
    }
  }
end

rule "Cambia Switch Apagado OFF ON"
when
    Item TR_TermostatoApagado changed to ON
then
        logInfo("Cambia Switch Apagado OFF ON rule", "Entró en la regla")
        TR_ModoManual.sendCommand(ON)
        logInfo("Cambia Switch Apagado OFF ON rule", "TemperaturaLeida TemperaturaBaja " + TemperaturaLeida + " " + TemperaturaBaja)
        if ((TemperaturaLeida != TemperaturaBaja)) {
            // CambioTemperaturaporRegla=true 
            thermostat_setpoint_heating.sendCommand(TemperaturaBaja)
            logInfo("Cambia Switch Apagado OFF ON rule", "Entró en el if")
            TR_TermostatoEncendido.sendCommand(OFF)
            TemperaturaLeida = (thermostat_setpoint_heating.state as DecimalType).intValue
            logInfo("Cambia Switch Apagado OFF ON rule", "Valor de TemperaturaLeida=" + TemperaturaLeida)
            TR_TemperaturaTermostato.sendCommand(TemperaturaLeida)
      } 
    
end



rule "Cambia Switch Encendido OFF ON"
when
    Item TR_TermostatoEncendido changed to ON
then
        logInfo("Cambia Switch Encendido OFF ON rule", "Entró en la regla")
        TR_ModoManual.sendCommand(ON)
        logInfo("Cambia Switch Encendido OFF ON rule", "TemperaturaLeida TemperaturaAlta " + TemperaturaLeida + " " + TemperaturaAlta)
        if ((TemperaturaLeida != TemperaturaAlta)) {
            // CambioTemperaturaporRegla=true 
            thermostat_setpoint_heating.sendCommand(TemperaturaAlta)
            logInfo("Cambia Switch Encendido OFF ON rule", "Entró en el if")
            TR_TermostatoApagado.sendCommand(OFF)
            TemperaturaLeida = (thermostat_setpoint_heating.state as DecimalType).intValue
            logInfo("Cambia Switch Encendido OFF ON rule", "Valor de TemperaturaLeida=" + TemperaturaLeida)
            TR_TemperaturaTermostato.sendCommand(TemperaturaLeida)
            
      } 
    
end

rule "Cambia Temperatura Alta en función de la temperatura exterior"
when 
  Item Temperature changed
then


    logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en la regla")
    
    if((Temperature.state) > 18 ) {
        logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en temperaalta=19")
        TemperaturaAlta = 19
    } else {
        logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en temperaalta=22")
        TemperaturaAlta = 22
    }

    
end


rule "Reset Modo Manual automatico Medianoche"
when
    Time is midnight
    
then
    logInfo("Reset Modo Manual automático Medianoche", "Entró en la regla")
    TR_ModoManual.sendCommand(OFF)
    TR_TermostatoApagado.sendCommand(OFF)
    TR_TermostatoEncendido.sendCommand(OFF)
end

rule "Modo Manual OFF"
when
    Item TR_ModoManual changed to OFF
then
    logInfo("Modo Manual OFF", "Entró en la regla")
    TR_TermostatoApagado.sendCommand(OFF)
    TR_TermostatoEncendido.sendCommand(OFF)
end

rule "Cambia Temperatura Manual"
when 
    Item thermostat_setpoint_heating changed
then 
    logInfo("Cambia Temperatura Manual", "Entró en la regla")
    if (!CambioTemperaturaporRegla){
        logInfo("Cambia Temperatura Manual", "Entró en el if")
        CambioTemperaturaporRegla=false
        TR_ModoManual.sendCommand(ON)
    }
end

 rule "Cambia temperatura por setpoint"
 when 
     Item TR_TemperaturaTermostato changed
 then
    logInfo("Cambia temperatura por setpoint", "Entró en la regla")
    logInfo("Cambia temperatura por setpoint", "CambioTemperaturaporRegla" + CambioTemperaturaporRegla)
     if (!CambioTemperaturaporRegla) {
         logInfo("Cambia temperatura por setpoint", "Entró en el if")
         logInfo("Cambia temperatura por setpoint", "TR_TemperaturaTermostato.state "+ (TR_TemperaturaTermostato.state as DecimalType).intValue)
         TemperaturaLeida = (TR_TemperaturaTermostato.state as DecimalType).intValue
         thermostat_setpoint_heating.sendCommand(TemperaturaLeida)
         TemperaturaLeida = (thermostat_setpoint_heating.state as DecimalType).intValue
         logInfo("Cambia temperatura por setpoint", "Valor de TemperaturaLeida=" + TemperaturaLeida)
         TR_ModoManual.sendCommand(ON)
         CambioTemperaturaporRegla=false
     }
 end
