// Constants used to generate this rule
var Number TemperaturaMedia = 20
var Number TemperaturaAlta = 21
var Number TemperaturaBaja = 18
var Number TemperaturaLeida = 0
var Number TemperaturaEstablecida = 0
var Number TemperaturaExterior = 0
var int TemperaturaInicioTermostato = 16
var int TemperaturaFinTermostato = 22
var Number TemperaturaCambio = 0



rule "Definicion Temperatura Salon"
when
    Item Salon_SensorTemperature changed or 
    Time cron "0 0 0/1 1/1 * ? *" 
then
  TemperaturaLeida = (Salon_SetpointHeating.state as Number).intValue
  logInfo("Definicion Temperatura Salon rule", "Entró en la regla" + TemperaturaLeida)


  if ((TR_ModoManual.state == OFF))
  {
     logInfo("Definicion Temperatura Salon rule", "Entró en el if state OFF Temperatura Inicio" + TemperaturaInicioTermostato + " Temperatura Fin " + TemperaturaFinTermostato)
    if ((now.isAfter(now.withTimeAtStartOfDay.plusHours( TemperaturaInicioTermostato  ))) && 
        now.isBefore(now.withTimeAtStartOfDay.plusHours( TemperaturaFinTermostato  ))) 
        {   
            logInfo("Definición Temperatura Salon rule", "TemperaturaLeida TemperaturaAlta " + TemperaturaLeida + " " + TemperaturaAlta)
            TemperaturaEstablecida = TemperaturaBaja
            
            logInfo("Definición Temperatura Salon rule", "Movlies.state EnCasa" + EnCasa.state )
            if (EnCasa.state == ON) 
                {
                TemperaturaEstablecida = TemperaturaAlta
                logInfo("Definición Temperatura Salon rule", "TemperaturaLeida EnCasa.state ON " + TemperaturaEstablecida + " " + TemperaturaLeida)
                }
            else 
                {
                if (CercaCasa.state == ON) 
                    {
                    TemperaturaEstablecida == TemperaturaMedia
                    logInfo("Definición Temperatura Salon rule", "TemperaturaLeida CercaCasa.state ON " + TemperaturaEstablecida + " " + TemperaturaLeida)
                    }                   
                }
            if (TemperaturaLeida != TemperaturaEstablecida ) 
            {
                logInfo("Definicion Temperatura Salon rule", "Entró en el if TemperaturaAlta")
                Salon_SetpointHeating.sendCommand(TemperaturaEstablecida)
                TemperaturaLeida = (Salon_SetpointHeating.state as Number).intValue
                TR_TemperaturaTermostato.postUpdate(TemperaturaLeida)
            
            }
        }
        else 
        {
            logInfo("Definición Temperatura Salon rule", "TemperaturaLeida TemperaturaBaja " + TemperaturaLeida + " " + TemperaturaBaja)
            if (TemperaturaLeida != TemperaturaBaja ) 
            {
                logInfo("Definicion Temperatura Salon rule", "Entró en el if TemperaturaBaja")
                Salon_SetpointHeating.sendCommand(TemperaturaBaja)
                TemperaturaLeida = (Salon_SetpointHeating.state as Number).intValue
                TR_TemperaturaTermostato.postUpdate(TemperaturaLeida)
            }
          
        }
        

        
  }
end

rule "Cambia Temperatura Alta en función de la temperatura exterior"
when 
  Item WeatherAndForecast_Current_OutdoorTemperature changed
then


    logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en la regla")
    TemperaturaExterior = (WeatherAndForecast_Current_OutdoorTemperature.state as QuantityType<Number>).doubleValue
    logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Temperatura exterior " + TemperaturaExterior )
    
    if((TemperaturaExterior) > 18 ) {
        logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en temperaalta=19")
        TemperaturaAlta = 19
    } else {
        logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en temperaalta=22")
        TemperaturaAlta = 21
    }

    
end


rule "Reset Modo Manual automatico Medianoche"
when
    Time is midnight
    
then
    if (TR_Out.state == OFF) 
    {
        logInfo("Reset Modo Manual automático Medianoche", "Entró en la regla")
        TR_ModoManual.sendCommand(OFF)
        TemperaturaInicioTermostato = 16
        TemperaturaFinTermostato = 22
        TR_TemperaturaInicio.sendCommand(TemperaturaInicioTermostato)
        TR_TemperaturaFin.sendCommand(TemperaturaFinTermostato)
    }
end

rule "Cambia Temperatura Manual"
when 
    Item Salon_SetpointHeating received command
then 
    logInfo("Cambia Temperatura Manual", "Entró en la regla")
    TemperaturaCambio = (Salon_SetpointHeating.state as Number).intValue
    TR_TemperaturaTermostato.postUpdate ( TemperaturaCambio  )
end 

rule "Cambia Temperatura Manual Maquina"
when 
    Item Salon_SetpointHeating changed 
then 
    logInfo("Cambia Temperatura Manual Maquina", "Entró en la regla")
    TemperaturaCambio = (Salon_SetpointHeating.state as Number).intValue
    TR_TemperaturaTermostato.postUpdate ( TemperaturaCambio  )
    TR_ModoManual.sendCommand(ON)
end 

rule "Cambia temperatura por setpoint"
 when 
     Item TR_TemperaturaTermostato received command
 then
    logInfo("Cambia temperatura por setpoint", "Entró en la regla")
    logInfo("Cambia temperatura por setpoint", "TR_TemperaturaTermostato.state "+ (TR_TemperaturaTermostato.state as Number).intValue)
    TemperaturaCambio =    (TR_TemperaturaTermostato.state as Number).intValue 
    logInfo("Cambia temperatura por setpoint", "TemperaturaCambio "+ TemperaturaCambio)    
    Salon_SetpointHeating.sendCommand(TemperaturaCambio)
    TemperaturaLeida = (Salon_SetpointHeating.state as Number).intValue
    logInfo("Cambia temperatura por setpoint", "Valor de TemperaturaLeida=" + TemperaturaLeida)
    TR_ModoManual.sendCommand(ON)
 end

rule "Cambia Switch OUT OFF ON"
when
    Item TR_Out changed to ON
then
    TR_ModoManual.sendCommand(ON)
end


rule "Cambia Temperatura Inicio Termostato"
when
    Item TR_TemperaturaInicio changed
then
    logInfo("Cambia Temperatura Inicio Termostato", "Entró en la regla")
    TemperaturaInicioTermostato = (TR_TemperaturaInicio.state as Number).intValue
    logInfo("Cambia Temperatura Inicio Termostato", "TemperaturaInicioTermostato " + TemperaturaInicioTermostato)
end

rule "Cambia Temperatura Fin Termostato"
when
    Item TR_TemperaturaFin changed
then
    logInfo("Cambia Temperatura Fin Termostato", "Entró en la regla")
    TemperaturaFinTermostato = (TR_TemperaturaFin.state as Number).intValue

end

rule "Hay alguien en casa"
when
    Item EnCasa changed 
then 
    logInfo("Hay alguien en casa", "Entró en la regla")
end