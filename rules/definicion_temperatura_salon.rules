// Constants used to generate this rule
var Number TemperaturaMedia = 18
var Number TemperaturaAlta = 21
var Number TemperaturaBaja = 17
var Number TemperaturaLeida = 0
var int TemperaturaInicioTermostato = 16
var int TemperaturaFinTermostato = 22
var Number TemperaturaCambio = 0
var Boolean EnCasa = false 
//var boolean CambioTemperaturaporRegla=false



rule "Definicion Temperatura Salon"
when
    Item SensorTermostatoTemperatura changed or 
    Time cron "0 0 0/1 1/1 * ? *" 
then
  TemperaturaLeida = (thermostat_setpoint_heating.state as Number).intValue
  logInfo("Definicion Temperatura Salon rule", "Entró en la regla")
  logInfo("Definicion Temperatura Salon rule", "atHomeFM" + atHomeFM.label)
  logInfo("Definicion Temperatura Salon rule", "atHomeFM" + atHomeFM.state.toString)
  if ((TR_ModoManual.state == OFF))
  {
    logInfo("Definicion Temperatura Salon rule", "Entró en el if state OFF")
    if ((now.isAfter(now.withTimeAtStartOfDay.plusHours( TemperaturaInicioTermostato  ))) && 
        now.isBefore(now.withTimeAtStartOfDay.plusHours( TemperaturaFinTermostato  ))) 
        {   
            logInfo("Definición Temperatura Salon rule", "TemperaturaLeida TemperaturaAlta " + TemperaturaLeida + " " + TemperaturaAlta)
            if (TemperaturaLeida != TemperaturaAlta ) 
            {
                logInfo("Definicion Temperatura Salon rule", "Entró en el if TemperaturaAlta")
                thermostat_setpoint_heating.sendCommand(TemperaturaAlta)
                TemperaturaLeida = (thermostat_setpoint_heating.state as Number).intValue
                TR_TemperaturaTermostato.postUpdate(TemperaturaLeida)
            
            }
  
    
        }
        else 
        {
            logInfo("Definición Temperatura Salon rule", "TemperaturaLeida TemperaturaMedia " + TemperaturaLeida + " " + TemperaturaMedia)
            if (TemperaturaLeida != TemperaturaMedia ) 
            {
                logInfo("Definicion Temperatura Salon rule", "Entró en el if TemperaturaMedia")
                //CambioTemperaturaporRegla=true 
                thermostat_setpoint_heating.sendCommand(TemperaturaMedia)
                TemperaturaLeida = (thermostat_setpoint_heating.state as Number).intValue
                TR_TemperaturaTermostato.postUpdate(TemperaturaLeida)
            }
        }
  }
end

rule "Cambia Temperatura Alta en función de la temperatura exterior"
when 
  Item localCurrentTemperature changed
then


    logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en la regla")
    logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Temperatura exterior " + localCurrentTemperature.state )
    if((localCurrentTemperature.state) > 18 ) {
        logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en temperaalta=19")
        TemperaturaAlta = 19
    } else {
        logInfo("Cambia Temperatura Alta en función de la temperatura exterior", "Entró en temperaalta=22")
        TemperaturaAlta = 22
    }

    
end


rule "Reset Modo Manual automatico Medianoche"
when
    Time is midnight
    
then
    if (TR_Out.state == OFF) 
    {
        logInfo("Reset Modo Manual automático Medianoche", "Entró en la regla")
        TR_ModoManual.sendCommand(OFF)
        //TR_TermostatoApagado.sendCommand(OFF)
        //TR_TermostatoEncendido.sendCommand(OFF)
        TemperaturaInicioTermostato = 16
        TemperaturaFinTermostato = 22
        TR_TemperaturaInicio.sendCommand(TemperaturaInicioTermostato)
        TR_TemperaturaFin.sendCommand(TemperaturaFinTermostato)
    }
end

 rule "Cambia Temperatura Manual"
when 
    Item thermostat_setpoint_heating received command
then 
    logInfo("Cambia Temperatura Manual", "Entró en la regla")
    //if (!CambioTemperaturaporRegla){
    //    logInfo("Cambia Temperatura Manual", "Entró en el if")
    //    CambioTemperaturaporRegla=false
    //    TR_ModoManual.sendCommand(ON)
        TemperaturaCambio = (thermostat_setpoint_heating.state as Number).intValue
        TR_TemperaturaTermostato.postUpdate ( TemperaturaCambio  )
    //}
end 

 rule "Cambia temperatura por setpoint"
 when 
     Item TR_TemperaturaTermostato received command
 then
    logInfo("Cambia temperatura por setpoint", "Entró en la regla")
    //logInfo("Cambia temperatura por setpoint", "CambioTemperaturaporRegla " + CambioTemperaturaporRegla)
    // if (!CambioTemperaturaporRegla) {
         logInfo("Cambia temperatura por setpoint", "Entró en el if")
         logInfo("Cambia temperatura por setpoint", "TR_TemperaturaTermostato.state "+ (TR_TemperaturaTermostato.state as Number).intValue)
    //     CambioTemperaturaporRegla=false
    TemperaturaCambio =    (TR_TemperaturaTermostato.state as Number).intValue 
    logInfo("Cambia temperatura por setpoint", "TemperaturaCambio "+ TemperaturaCambio)    
         thermostat_setpoint_heating.sendCommand(TemperaturaCambio)
         TemperaturaLeida = (thermostat_setpoint_heating.state as Number).intValue
         logInfo("Cambia temperatura por setpoint", "Valor de TemperaturaLeida=" + TemperaturaLeida)
         TR_ModoManual.sendCommand(ON)
         
     //}
 end

rule "Cambia Switch OUT OFF ON"
when
    Item TR_Out changed to ON
then
    TR_ModoManual.sendCommand(ON)
end


rule "Cambia Temperatura Inicio Termostato"
when
    Item TR_TemperaturaInicio changed
then
    logInfo("Cambia Temperatura Inicio Termostato", "Entró en la regla")
    TemperaturaInicioTermostato = (TR_TemperaturaInicio.state as Number).intValue

end

rule "Cambia Temperatura Fin Termostato"
when
    Item TR_TemperaturaFin changed
then
    logInfo("Cambia Temperatura Fin Termostato", "Entró en la regla")
    TemperaturaFinTermostato = (TR_TemperaturaFin.state as Number).intValue

end

rule "Hay alguien en casa"
when
    Item Moviles changed 
then 
    logInfo("Hay alguien en casa", "Entró en la regla")
end